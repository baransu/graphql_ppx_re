name: graphql_ppx_re release pipeline

on:
  push:
    tags:
      - v*

jobs:
  test_and_build_alpine:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }} with alpine Docker
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest]

    steps:
      - uses: docker://node:12.6-alpine
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: setup
        run: |
          npm install -g esy@latest cross-env
      # OCaml 4.06 and BuckleScript 6
      - name: install-build
        run: |
          esy install
          esy b
      - name: test-native
        run: |
          esy b dune runtest -f
      - name: test-bsb6
        run: |
          cd tests_bucklescript
          node ./run.js bsb6
      - name: Upload artifacts ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}-bsb6
          path: _build/default/src/bucklescript_bin/bin.exe
      # OCaml 4.02 and BuckleScript 5
      - name: install-build @402
        run: |
          esy @402 install
          esy @402 b
      - name: test-bsb5
        run: |
          cd tests_bucklescript
          node ./run.js bsb5
      - name: Upload artifacts ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: _build/default/src/bucklescript_bin/bin.exe
        env:
          CI: true

  test_and_build:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: setup
        run: |
          npm install -g esy@latest cross-env
      # OCaml 4.06 and BuckleScript 6
      - name: install-build
        run: |
          esy install
          esy b
      - name: test-native
        run: |
          esy b dune runtest -f
      - name: test-bsb6
        run: |
          cd tests_bucklescript
          node ./run.js bsb6
      - name: Upload artifacts ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}-bsb6
          path: _build/default/src/bucklescript_bin/bin.exe
      # OCaml 4.02 and BuckleScript 5
      - name: install-build @402
        run: |
          esy @402 install
          esy @402 b
      - name: test-bsb5
        run: |
          cd tests_bucklescript
          node ./run.js bsb5
      - name: Upload artifacts ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: _build/default/src/bucklescript_bin/bin.exe
        env:
          CI: true

  publish:
    needs: test_and_build
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"

      - name: Download linux artifacts
        uses: actions/download-artifact@master
        with:
          name: ubuntu-latest
          path: binaries/linux

      - name: Download macOS artifacts
        uses: actions/download-artifact@master
        with:
          name: macOS-latest
          path: binaries/darwin

      - name: Download windows artifacts
        uses: actions/download-artifact@master
        with:
          name: windows-latest
          path: binaries/windows

      - name: Move artifacts
        run: |
          mkdir -p bin/bsb6
          mv binaries/darwin/bin.exe bin/graphql_ppx-darwin-x64.exe
          mv binaries/windows/bin.exe bin/graphql_ppx-win-x64.exe
          mv binaries/linux/bin.exe bin/graphql_ppx-linux-x64.exe
          rm -rf binaries

      - name: Download bsb6 linux artifacts
        uses: actions/download-artifact@master
        with:
          name: ubuntu-latest-bsb6
          path: binaries/linux

      - name: Download bsb6 macOS artifacts
        uses: actions/download-artifact@master
        with:
          name: macOS-latest-bsb6
          path: binaries/darwin

      - name: Download bsb6 windows artifacts
        uses: actions/download-artifact@master
        with:
          name: windows-latest-bsb6
          path: binaries/windows

      - name: Move artifacts
        run: |
          mv binaries/darwin/bin.exe bin/bsb6/graphql_ppx-darwin-x64.exe
          mv binaries/windows/bin.exe bin/bsb6/graphql_ppx-win-x64.exe
          mv binaries/linux/bin.exe bin/bsb6/graphql_ppx-linux-x64.exe

      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
