name: graphql_ppx pipeline

on: [pull_request, push]

jobs:
  test_and_build_linux:
    name: ${{ matrix.os }}/node-${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest]

    container:
      # https://github.com/baransu/docker-esy
      image: cichocinski/docker-esy:alpine3.8

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        run: esy install

      - name: Print esy cache
        id: print_esy_cache
        run: node .github/workflows/print_esy_cache.js

      - name: Try to restore dependencies cache
        id: deps-cache-macos
        uses: actions/cache@v1
        with:
          path: ${{ steps.print_esy_cache.outputs.esy_cache }}
          key: ${{ matrix.os }}-${{ hashFiles('**/index.json') }}

      - name: build
        run: esy b

      # - name: test-native
      #   run: |
      #     esy b dune runtest -f
      #   env:
      #     CI: true

      - name: test-bucklescript
        run: |
          esy release-static
          cd tests_bucklescript
          npm ci --no-optional
          npm run test
        env:
          CI: true

      - name: (only on release) Upload artifacts ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: _build/default/src/bucklescript_bin/bin.exe

  test_and_build:
    name: ${{ matrix.os }}/node-${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install esy
        run: |
          npm install -g esy@0.6.0

      - name: Install
        run: esy install

      - name: Print esy cache
        id: print_esy_cache
        run: node .github/workflows/print_esy_cache.js

      - name: Try to restore dependencies cache
        id: deps-cache-macos
        uses: actions/cache@v1
        with:
          path: ${{ steps.print_esy_cache.outputs.esy_cache }}
          key: ${{ matrix.os }}-${{ hashFiles('**/index.json') }}

      - name: build
        run: esy b

      # - name: test-native
      #   run: |
      #     esy b dune runtest -f
      #   env:
      #     CI: true

      - name: test-bucklescript
        run: |
          cd tests_bucklescript
          npm ci --no-optional
          npm run test
        env:
          CI: true

      - name: (only on release) Upload artifacts ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: _build/default/src/bucklescript_bin/bin.exe

  publish:
    needs: test_and_build
    name: (only on release) Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"

      - name: Download linux artifacts
        if: success()
        uses: actions/download-artifact@master
        with:
          name: ubuntu-latest
          path: binaries/linux

      - name: Download macOS artifacts
        if: success()
        uses: actions/download-artifact@master
        with:
          name: macOS-latest
          path: binaries/darwin

      - name: Download windows artifacts
        if: success()
        uses: actions/download-artifact@master
        with:
          name: windows-latest
          path: binaries/windows

      - name: Move artifacts
        if: success()
        run: |
          mkdir -p bin
          mv binaries/darwin/bin.exe bin/graphql_ppx-darwin-x64.exe
          mv binaries/windows/bin.exe bin/graphql_ppx-win-x64.exe
          mv binaries/linux/bin.exe bin/graphql_ppx-linux-x64.exe

      - name: Publish
        if: success() && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
        run: npm publish --tag=next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Publish Prerelease
        if: success()
        run: |
          npm version prerelease -preid $(git rev-parse --short HEAD) -no-git-tag-version
          npm publish --tag=dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
